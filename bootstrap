#!/bin/bash
set -euo pipefail

usage() {
    echo 'Usage: bootstrap [-h] [--force] SCRIPT_PATH'
    echo ''
    echo '  SCRIPT_PATH  path to wrapper script'
    echo '  --force      force overwrite of wrapper script if it already exists'
    echo ''
    echo 'Visit https://github.com/rcook/isopy for more information'
}

if [ $# -eq 0 ]; then
    echo 'Invalid command line'
    echo ''
    usage
    exit 1
fi

if ([ $# -eq 1 ] && ( [ "$1" == '-h' ] || [ "$1" == '--help' ] )); then
    usage
    exit 0
fi

script_path=
force=
while [ $# -gt 0 ]; do
    arg=$1
    shift

    if [ "$arg" == '-f' ] || [ "$arg" == '--force' ]; then
        if [ "$force" != '' ]; then
            echo '--force already specified'
            echo ''
            usage
            exit 1
        fi
        force=1
        continue
    fi

    if [[ "$arg" = -* ]]; then
        echo "Invalid option $arg"
        echo ''
        usage
        exit 1
    fi

    if [ "$script_path" != '' ]; then
        echo ERROR
        exit 1
    fi
    script_path=$(realpath $arg)
done

if [ "$script_path" == '' ]; then
    echo 'Specify output script path'
    echo ''
    usage
    exit 1
fi

if [ "$force" == '' ] && [ -e "$script_path" ]; then
    echo "Script $script_path already exists; specify --force to overwrite it"
    exit 1
fi

this_dir=$(cd $(dirname $0); pwd -P)
cache_dir=$HOME/.isopy
python_version=3.11.1
tag=20230116

assets_dir=$cache_dir/assets
isopy_env_dir=$cache_dir/envs/isopy
isopy_env_path=$isopy_env_dir/env.yaml
python_base_name=cpython-$python_version+$tag
isopy_python_dir=$isopy_env_dir/python
bin_dir=$HOME/.local/bin

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    python_file_name=$python_base_name-x86_64-unknown-linux-gnu-install_only.tar.gz
elif [[ "$OSTYPE" == "darwin"* ]]; then
    python_file_name=$python_base_name-x86_64-apple-darwin-install_only.tar.gz
else
    echo "Unsupported OS $OSTYPE"
fi

python_url=https://github.com/indygreg/python-build-standalone/releases/download/$tag/$python_file_name
python_path=$assets_dir/$python_file_name

mkdir -p $assets_dir
mkdir -p $isopy_python_dir

if [ ! -e $python_path ]; then
    curl -L $python_url --output $python_path
    set +e
    echo "$(cat $this_dir/sha256sums/$python_file_name.sha256)  $python_path" | \
        sha256sum --check --quiet -
    result=$?
    set -e
    if [ $result -ne 0 ]; then
        echo Checksum failed on $python_path
        rm -rf $python_path
        exit 1
    fi
fi

if [ ! -e $isopy_python_dir/bin ]; then
    T=$(mktemp -d -t isopy-bootstrap-XXXXXX)
    trap 'rm -rf "$T"' EXIT
    tar xf $python_path -C $T
    mkdir -p $isopy_python_dir
    mv $T/python/* $isopy_python_dir
    rm -rf $T
    PATH=$isopy_python_dir/bin:$PATH \
        python3 -m pip install --upgrade pip
    PATH=$isopy_python_dir/bin:$PATH \
        python3 -m pip install -r $this_dir/requirements.txt
fi

cat > $isopy_env_path <<EOF
name: isopy
python_dir: python
python_version: $python_version
tag: '$tag'
EOF

cat > $script_path <<EOF
#!/bin/bash
set -euo pipefail
PATH=$isopy_python_dir/bin:\$PATH \\
  PYTHONPATH=$this_dir \\
  exec python3 $this_dir/isopy_bin/main.py "\$@"
EOF
chmod +x $script_path
echo "Wrapper script generated at $script_path; please make sure this file is on PATH"
